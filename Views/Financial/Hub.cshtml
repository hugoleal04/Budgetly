@model Budgetly.Models.HubViewModel
@{
    ViewData["Title"] = "User Hub";
}

<h1>@ViewData["Title"]</h1>

<p><strong>Name:</strong> @Model.Account.name</p>
<p><strong>Balance:</strong> @Model.Account.money €</p>

<a class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addMoneyModal">Add money</a>
<a asp-controller="Financial" asp-action="ExpenseMenu" asp-route-id="@Model.Account.id" class="btn btn-danger">Add expense</a>
<a asp-controller="Financial" asp-action="Index" class="btn btn-secondary">Back</a>

<div class="mb-3">
    <label class="form-label">Per day you can spend until:</label>
    <input type="date" id="endDate" class="form-control">
</div>

<p>Per day spending: <span id="perDay">0</span> €</p>

<script>
    const balance = parseFloat("@Model.Account.money");
    const endDateInput = document.getElementById('endDate');
    const perDaySpan = document.getElementById('perDay');

    endDateInput.addEventListener('change', () => {
        const endDate = new Date(endDateInput.value);
        const today = new Date();
        today.setHours(0,0,0,0); // reset hora para não interferir
        const diffTime = endDate - today;
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

        if(diffDays > 0){
            const perDay = balance / diffDays;
            perDaySpan.innerText = perDay.toFixed(2);
        } else {
            perDaySpan.innerText = "0";
        }
    });
</script>


<!-- Modal -->
<div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addMoneyLabel">Add Money</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form method="post" asp-controller="Financial" asp-action="AddMoney" asp-route-id="@Model.Account.id">
          <div class="mb-3">
            <label for="amount" class="form-label">Amount (€)</label>
            <input type="number" step="0.01" class="form-control" id="amount" name="amount" required>
          </div>
          <button type="submit" class="btn btn-primary">Add</button>
        </form>
      </div>
    </div>
  </div>
</div>





<h2>Expenses:</h2>
<div class="table-responsive" style="max-height: 41vh; overflow-y: auto;">
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Type</th>
                <th>Description</th>
                <th>Price</th>
                <th>Date</th>
            </tr>
    </thead>
    <tbody>
        @foreach (var expense in Model.Expenses)
        {
            <tr>
                <td>@expense.Type</td>
                <td>@expense.Description</td>
                <td>@expense.Price</td>
                <td>@expense.Date.ToShortDateString()</td>
            </tr>
        }
    </tbody>
</table>
